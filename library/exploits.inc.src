import_code("init.inc.src")
import_code("menu.inc.src")

_try_to_guess_user = function(computer) 
    res = computer.touch("/root", "perm-test")
    if res == 1 then
        computer.File("/root/perm-test").delete
        return "root"
    end if
    file = computer.File("/home").get_folders
    for f in file
        res = computer.touch(f.path, "perm-test")
        if res == 1 then
            computer.File(f.path + "/perm-test").delete
            return f.name
        end if
    end for
end function

_shell_termianal = function(result)
    user = _try_to_guess_user(result.host_computer)
    _init_prompter(result, user)
    return result.start_terminal
end function

_exploit_shell = function(result)
    option = -1
    while option != "0"
        option = _show_menu(["Back", "Start terminal", "Use Computer"], "0")
        if option == "1" then
            return _shell_termianal(result)
        else if option == "2" then
            _exploit_computer(result.host_computer)
        end if
    end while
    return result
end function

_computer_passwords = function(result)
    home_folder = result.File("/home")
    if not home_folder then 
        exit("No access to /home") 
    end if
    user_homes = home_folder.get_folders
    passwords = []
    for user_home in user_homes
        bank_file = result.File(user_home.path + "/Config/Bank.txt")
        if bank_file != null then 
            passwords = passwords + [bank_file.get_content()] 
        end if
        bank_file = result.File(user_home.path + "/Config/Mail.txt")
        if bank_file != null then 
            passwords = passwords + [bank_file.get_content()] 
        end if
    end for
    print(passwords.join("\n"))
    passwd_file = result.File("/etc/passwd")
    print("/etc/passwd")
    if passwd_file.has_permission("r") == true then
        print(passwd_file.get_content())
    else 
        print("No access to /etc/passwd")
    end if
end function

_traverse_delete = function(file, user, file_filter)
    if file.is_folder then
        files = file.get_files
        if files then
            for f in files
                _traverse_delete(f, user, file_filter)
            end for
        end if 
        folders = file.get_folders
        if folders then
            for f in folders
                _traverse_delete(f, user, file_filter)
            end for
        end if
    end if
    if(file.name == file_filter) then
        _force_delete_file(file, user)
    end if
end function

_computer_delete_log = function(result, user)
    log_file = result.File("/var/system.log")
    if not log_file then return
    _force_delete_file(log_file, user)
end function

_computer_cleanup = function(result, user = null) 
    if not user then user = _try_to_guess_user(result)
    rootDir = result.File("/")
    for file in INIT_COMMANDS
        _traverse_delete(rootDir, user, file)
    end for
    for file in INIT_PROGRAMS
        _traverse_delete(rootDir, user, file)
    end for
    for file in INIT_LIBS
        if not LIBS_TO_RETAIN.indexOf(file) then continue
        _traverse_delete(rootDir, user, file)
    end for
    _computer_delete_log(result, user)
end function

_computer_ports = function(result) 
    ports = result.get_ports
    print("Used ports: ")
    for port in ports
        print("    " + port.port_number)
    end for
end function

_computer_corrupt = function(result, user = null)
    if not user then user = _try_to_guess_user(result)
    _computer_cleanup(result)
    _force_delete_file(result.File("/etc/passwd"), user)
    _force_delete_file(result.File("/boot/System.map"), user)
    _force_delete_file(result.File("/boot/initrd.img"), user)
    _force_delete_file(result.File("/boot/kernel.img"), user)
    _computer_delete_log(result, user)
end function

_exploit_computer = function (result)
    option = -1
    while option != "0"
        option = _show_menu(["Back", "Get all passwords", "Cleanup", "Corrupt", "Get Ports"], "0")
        if option == "1" then
            _computer_passwords(result)
        else if option == "2" then
            _computer_cleanup(result)
        else if option == "3" then
            _computer_corrupt(result)
        else if option == "4" then
            _computer_ports(result)
        end if
    end while
    return result
end function

_exploit_ftp = function(result)
    option = -1
    while option != "0"
        option = _show_menu(["Back", "Use computer", "Start terminal"], "0")
        if option == "1" then
            _exploit_computer(result.host_computer)
        else if option == "2" then
            return result.start_terminal
        end if
    end while
    return result
end function

_file_cleanup = function(file)
    user = user_input("Enter user: ")
    rootDir = file
    while rootDir.parent != null
        rootDir = rootDir.parent
    end while
    for to_delete in INIT_COMMANDS
        print("Try to delete " + to_delete)
        _traverse_delete(rootDir, user, to_delete)
    end for
    for to_delete in INIT_PROGRAMS
        print("Try to delete " + to_delete)
        _traverse_delete(rootDir, user, to_delete)
    end for
    for to_delete in INIT_LIBS
        if not LIBS_TO_RETAIN.indexOf(to_delete) then continue
        print("Try to delete " + to_delete)
        _traverse_delete(rootDir, user, to_delete)
    end for
    folders = rootDir.get_folders
    var_folder = null
    for f in folders
        if f.name == "var" then
            var_folder = f
            break
        end if
    end for
    if var_folder == null then return
    files = var_folder.get_files
    for f in files
        if f.name == "system.log" then
            _force_delete_file(f, user)
        end if
    end for
end function

__find_file = function (file, name)
    if file.name == name then return file
    if file.is_folder then
        files = file.get_files
        if files then
            for f in files
                res = __find_file(f, name)
                if res != null then return res
            end for
        end if
        folders = file.get_folders
        if folders then
            for f in folders
                res = __find_file(f, name)
                if res != null then return res
            end for
        end if
    end if
    return null
end function

_file_all_passwords = function(file) 
    rootDir = file
    while rootDir.parent != null
        rootDir = rootDir.parent
    end while
    homeDir = __find_file(rootDir, "home")
    if homeDir == null then return
    users = homeDir.get_folders
    for user in users
        bank_file = __find_file(user, "Bank.txt")
        if bank_file != null then
            print(bank_file.get_content())
        end if
        mail_file = __find_file(user, "Mail.txt")
        if mail_file != null then
            print(mail_file.get_content())
        end if
    end for
    passwd_file = __find_file(rootDir, "passwd")
    if passwd_file == null then return
    print(passwd_file.get_content())
end function

_exploit_file = function(result) 
    option = -1
    while option != "0"
        option = _show_menu(["Back", "Cleanup", "All passwords"], "0")
        if option == "1" then
            _file_cleanup(result)
        else if option == "2" then
            _file_all_passwords(result)
        end if
    end while
    return result
end function